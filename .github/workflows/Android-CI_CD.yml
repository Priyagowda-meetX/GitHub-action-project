name: Android CI/CD Pipeline

on:
  push:
    branches:
      - Pre-Production
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Upload APK

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('*/.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Release APK
        run: ./gradlew assembleRelease --no-daemon

      - name: Check APK existence
        run: |
          echo "Checking APK existence..."
          ls -l app/build/outputs/apk/release/

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 7

  upload:
    runs-on: ubuntu-latest
    needs: build
    name: Upload APK to Firebase App Distribution

    steps:
      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: release-apk
          path: ./apk-download

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Set up Google Credentials
        run: printf '%s' "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" > $HOME/silent-effect-458307-f4.json

      - name: Authenticate with Google Cloud
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/silent-effect-458307-f4.json
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS

      - name: Upload to Firebase App Distribution
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/silent-effect-458307-f4.json
          firebase appdistribution:distribute ./apk-download/app-release-unsigned.apk \
            --app 1:548825248171:android:2bd20e9856d2ca8ce8a2ee \
            --groups "Testers" \
            --debug

  additional-steps:
    runs-on: ubuntu-latest
    needs: upload
    name: Additional Tasks for oauth2 or Google Integration

    steps:
      - name: Set up oauth2 Credentials for API Access
        run: printf '%s' "${{ secrets.GOOGLE_OAUTH_CREDENTIALS }}" > $HOME/oauth2-credentials.json

      - name: Authenticate and Access Google APIs
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/oauth2-credentials.json
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS

      - name: Run Google API Command (example)
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/oauth2-credentials.json
          # Replace this curl with your actual Google API request
          echo "Example API call using auth token..."
