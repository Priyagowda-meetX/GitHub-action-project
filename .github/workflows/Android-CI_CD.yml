name: Android CI/CD Pipeline

on:
  push:
    branches:
      - Pre-Production

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build APK

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build APK
        run: ./gradlew assembleRelease --no-daemon

      - name: Run Android Tests
        run: ./gradlew test --no-daemon

      - name: Check if APK Exists
        run: |
          echo "Checking APK existence..."
          ls -l app/build/outputs/apk/release/

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 7

  upload:
    runs-on: ubuntu-latest
    needs: build
    name: Upload APK to Firebase

    steps:
      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: release
          path: ./apk-download

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Check downloaded APK
        run: |
          echo "Checking downloaded APK"
          ls -l ./apk-download

      - name: Upload APK to Firebase App Distribution
        run: |
          firebase appdistribution:distribute ./apk-download/app-release-unsigned.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --token ${{ secrets.FIREBASE_AUTH_TOKEN }} \
            --groups "Testers" \
            --debug
